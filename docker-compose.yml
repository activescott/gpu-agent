services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: gpu_agent
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gpu_agent
    # ports:
    #   - "5432:5432"  # postgres still accessible on port 5432 to app service via docker network, but not exposed to host
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    # ===========================================
    # DEVELOPMENT MODE (default - enables HMR):
    # ===========================================
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      # Mount source directories for hot module reloading (HMR)
      - ./apps:/app/apps
      - ./packages:/app/packages
      - ./data:/app/data
      # DO NOT mount node_modules, .next, .turbo - let container manage these for performance
      # Excluded volumes: ./node_modules, ./apps/web/.next, ./apps/web/.turbo
    
    # ===========================================
    # PRODUCTION MODE (for production-like testing):
    # ===========================================
    # Uncomment the lines below and comment out the development section above
    # to test with the production container (optimized build, no HMR):
    #
    # build: .  # Uses main Dockerfile (production build)
    # volumes: []  # No volume mounts needed for production testing
    
    ports:
      - "3000:3000"
    env_file:
      - ./apps/web/.env
    environment:
      # Override database URLs for Docker environment
      - POSTGRES_PRISMA_URL=postgresql://gpu_agent:password@postgres:5432/gpu_agent?schema=public&pgbouncer=true&connect_timeout=15
      - POSTGRES_URL_NON_POOLING=postgresql://gpu_agent:password@postgres:5432/gpu_agent?schema=public&connect_timeout=15
      - NEXT_PUBLIC_DOMAIN=localhost:3000
      - NEXT_PUBLIC_POSTHOG_HOST=http://localhost:3000/a
    depends_on:
      - postgres

volumes:
  postgres_data:
